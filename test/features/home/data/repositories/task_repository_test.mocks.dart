// Mocks generated by Mockito 5.0.14 from annotations
// in todo_tdd/test/features/home/data/repositories/task_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_tdd/core/core.dart' as _i4;
import 'package:todo_tdd/features/home/home.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeMyTaskModel_0 extends _i1.Fake implements _i2.MyTaskModel {}

/// A class which mocks [TaskRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskRemoteDataSource extends _i1.Mock
    implements _i2.TaskRemoteDataSource {
  MockTaskRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.MyTaskModel> createTask(
          {String? title, String? description}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #createTask, [], {#title: title, #description: description}),
              returnValue: Future<_i2.MyTaskModel>.value(_FakeMyTaskModel_0()))
          as _i3.Future<_i2.MyTaskModel>);
  @override
  _i3.Future<bool> updateTask({String? id, bool? newStatus}) =>
      (super.noSuchMethod(
          Invocation.method(#updateTask, [], {#id: id, #newStatus: newStatus}),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<List<_i2.MyTaskModel>> getAllTasks() => (super.noSuchMethod(
          Invocation.method(#getAllTasks, []),
          returnValue: Future<List<_i2.MyTaskModel>>.value(<_i2.MyTaskModel>[]))
      as _i3.Future<List<_i2.MyTaskModel>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TaskLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskLocalDataSource extends _i1.Mock
    implements _i2.TaskLocalDataSource {
  MockTaskLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i2.MyTaskModel>> getAllTasks() => (super.noSuchMethod(
          Invocation.method(#getAllTasks, []),
          returnValue: Future<List<_i2.MyTaskModel>>.value(<_i2.MyTaskModel>[]))
      as _i3.Future<List<_i2.MyTaskModel>>);
  @override
  _i3.Future<void> cacheAllTasks({List<_i2.MyTaskModel>? tasks}) => (super
      .noSuchMethod(Invocation.method(#cacheAllTasks, [], {#tasks: tasks}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i4.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  String toString() => super.toString();
}
